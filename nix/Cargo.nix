
# This file was @generated by crate2nix 0.7.1 with the command:
#   "generate" "-o" "nix/Cargo.nix"
# See https://github.com/kolloch/crate2nix for more info.

{ pkgs ? import <nixpkgs> { config = {}; }
, lib ? pkgs.lib
, stdenv ? pkgs.stdenv
, buildRustCrate ? pkgs.buildRustCrate
  # This is used as the `crateOverrides` argument for `buildRustCrate`.
, defaultCrateOverrides ? pkgs.defaultCrateOverrides
  # The features to enable for the root_crate or the workspace_members.
, rootFeatures ? [ "default" ]
  # If true, throw errors instead of issueing deprecation warnings.
, strictDeprecation ? false
}:

rec {
  #
  # "public" attributes that we attempt to keep stable with new versions of crate2nix.
  #

  
  # Refer your crate build derivation by name here.
  # You can override the features with
  # workspaceMembers."${crateName}".build.override { features = [ "default" "feature1" ... ]; }.
  workspaceMembers = {
    "sticker2" = rec {
      packageId = "sticker2 0.2.0 (path+file:///home/daniel/git/sticker2/sticker2)";
      build = internal.buildRustCrateWithFeatures {
        packageId = "sticker2 0.2.0 (path+file:///home/daniel/git/sticker2/sticker2)";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "sticker2-utils" = rec {
      packageId = "sticker2-utils 0.2.0 (path+file:///home/daniel/git/sticker2/sticker2-utils)";
      build = internal.buildRustCrateWithFeatures {
        packageId = "sticker2-utils 0.2.0 (path+file:///home/daniel/git/sticker2/sticker2-utils)";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
  };
  workspace_members =
    internal.deprecationWarning
      "workspace_members is deprecated in crate2nix 0.4. Please use workspaceMembers instead."
      lib.mapAttrs (n: v: v.build) workspaceMembers;

  #
  # "internal" ("private") attributes that may change in every new version of crate2nix.
  #

  internal = rec {
    # Build and dependency information for crates.
    # Many of the fields are passed one-to-one to buildRustCrate.
    #
    # Noteworthy:
    # * `crateBin = [{name = ","; path = ",";}];`: a hack to disable building the binary.
    # * `dependencies`/`buildDependencies`: similar to the corresponding fields for buildRustCrate.
    #   but with additional information which is used during dependency/feature resolution.
    # * `resolvedDependencies`: the selected default features reported by cargo - only included for debugging.
    # * `devDependencies` as of now not used by `buildRustCrate` but used to
    #   inject test dependencies into the build

    crates = {
      "adler32 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "adler32";
        version = "1.0.4";
        edition = "2015";
        sha256 = "1hnan4fgmnidgn2k84hh2i67c3wp2c5iwd5hs61yi7gwwx1p6bjx";
        authors = [
          "Remi Rampin <remirampin@gmail.com>"
        ];
        
      };
      "aho-corasick 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "aho-corasick";
        version = "0.7.8";
        edition = "2015";
        sha256 = "048q5vr1qac4lf90z80lw8kcya6qmlxw857xhwxsssk832jdafkl";
        libName = "aho_corasick";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr 2.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "memchr/use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "ansi_term";
        version = "0.11.0";
        edition = "2015";
        sha256 = "16wpvrghvd0353584i1idnsgm0r3vchg8fyrm0x8ayv1rgvbljgf";
        authors = [
          "ogham@bsago.me"
          "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (target."os" == "windows");
            features = [ "errhandlingapi" "consoleapi" "processenv" ];
          }
        ];
        
      };
      "anyhow 1.0.26 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "anyhow";
        version = "1.0.26";
        edition = "2018";
        sha256 = "0g6mzcxyj88k8bv8rr3zx4yczgimqvvgr12n14a29sqj6s1zc9bq";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "approx 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "approx";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1hx580xjdxl3766js9b49rnbnmr8gw8c060809l43k9f0xshprph";
        authors = [
          "Brendan Zabarauskas <bjzaba@yahoo.com.au>"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "ascii 0.9.3 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "ascii";
        version = "0.9.3";
        edition = "2015";
        sha256 = "0km3zzkhrr22drf9p1zcblqirlxkdc7zra25acpi0h8qax5c1cga";
        authors = [
          "Thomas Bahn <thomas@thomas-bahn.net>"
          "Torbj√∏rn Birch Moltu <t.b.moltu@lyse.net>"
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "atty 0.2.14 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "atty";
        version = "0.2.14";
        edition = "2015";
        sha256 = "1s7yslcs6a28c5vz7jwj63lkfgyx8mx99fdirlhi9lbhhzhrpcyr";
        authors = [
          "softprops <d.tangren@gmail.com>"
        ];
        dependencies = [
          {
            name = "hermit-abi";
            packageId = "hermit-abi 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (target."os" == "hermit");
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."windows";
            features = [ "consoleapi" "processenv" "minwinbase" "minwindef" "winbase" ];
          }
        ];
        
      };
      "autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "autocfg";
        version = "0.1.7";
        edition = "2015";
        sha256 = "1chwgimpx5z7xbag7krr9d8asxfqbh683qhgl9kn3hxk2l0djj8x";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];
        
      };
      "autocfg 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "autocfg";
        version = "1.0.0";
        edition = "2015";
        sha256 = "17cv6pwb4q08s0ynpr4n8hv5299hcmhdgvdchzixfpw8y5qcgapq";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];
        
      };
      "backtrace 0.3.44 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "backtrace";
        version = "0.3.44";
        edition = "2018";
        sha256 = "0djmbf6caj7qm2p7jw6wzjxc83sji9gdd8vjp9mg2g0gyjdnn0z4";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "backtrace-sys";
            packageId = "backtrace-sys 0.1.32 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "rustc-demangle";
            packageId = "rustc-demangle 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "std" "libunwind" "libbacktrace" "dladdr" "dbghelp" ];
          "gimli-symbolize" = [ "addr2line" "findshlibs" "memmap" "goblin" ];
          "libbacktrace" = [ "backtrace-sys" ];
          "rustc-dep-of-std" = [ "backtrace-sys/rustc-dep-of-std" "cfg-if/rustc-dep-of-std" "core" "compiler_builtins" "libc/rustc-dep-of-std" "rustc-demangle/rustc-dep-of-std" ];
          "serialize-rustc" = [ "rustc-serialize" ];
          "serialize-serde" = [ "serde" ];
          "verify-winapi" = [ "winapi/dbghelp" "winapi/handleapi" "winapi/libloaderapi" "winapi/minwindef" "winapi/processthreadsapi" "winapi/synchapi" "winapi/winbase" "winapi/winnt" ];
        };
        resolvedDefaultFeatures = [ "backtrace-sys" "dbghelp" "default" "dladdr" "libbacktrace" "libunwind" "std" ];
      };
      "backtrace-sys 0.1.32 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "backtrace-sys";
        version = "0.1.32";
        edition = "2015";
        sha256 = "14c406z8bdmms8a5l8cv79jfkz1mk10qk5p97izf4vai53qparax";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc 1.0.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "bitflags";
        version = "1.2.1";
        edition = "2015";
        sha256 = "14qnd5nq8p2almk79m4m8ydqhd413yaxsyjp5xd19g3mikzf47fg";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "bstr 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "bstr";
        version = "0.2.11";
        edition = "2015";
        sha256 = "0j1cki9nmplv99gdwrdlj8z4kf8ncid9b99qpn7xnnha392f2ajh";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr 2.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "regex-automata";
            packageId = "regex-automata 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" "unicode" ];
          "serde1" = [ "std" "serde1-nostd" "serde/std" ];
          "serde1-nostd" = [ "serde" ];
          "std" = [ "memchr/use_std" ];
          "unicode" = [ "lazy_static" "regex-automata" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "regex-automata" "serde" "serde1" "serde1-nostd" "std" "unicode" ];
      };
      "bumpalo 3.2.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "bumpalo";
        version = "3.2.0";
        edition = "2018";
        sha256 = "0hpp4wfcn04gnl1ji4a80b85xwknsci81xqyllq174gq9z0rsd8z";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "byteorder 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "byteorder";
        version = "1.3.4";
        edition = "2015";
        sha256 = "1pkjfhgjnq898g1d38ygcfi0msg3m6756cwv0sgysj1d26p8mi08";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "bzip2 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "bzip2";
        version = "0.3.3";
        edition = "2015";
        sha256 = "0fvfwanp42j1zpig880jhb5mc0na50bijmwd6211p77sy35w7ds2";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "bzip2-sys";
            packageId = "bzip2-sys 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "tokio" = [ "tokio-io" "futures" ];
        };
      };
      "bzip2-sys 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "bzip2-sys";
        version = "0.1.7";
        edition = "2015";
        sha256 = "0pz2mdhkk8yphiqdh2kghdxb60kqyd10lfrjym3r4k5dylvam135";
        libName = "bzip2_sys";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc 1.0.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "c2-chacha 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "c2-chacha";
        version = "0.2.3";
        edition = "2018";
        sha256 = "1fzn2n9k51b8wp4m41pkdzwlk1dbkjb6ha9rqdp4jfmzl753hhi1";
        authors = [
          "The CryptoCorrosion Contributors"
        ];
        dependencies = [
          {
            name = "ppv-lite86";
            packageId = "ppv-lite86 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)";
            rename = "ppv-lite86";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" "simd" "rustcrypto_api" ];
          "rustcrypto_api" = [ "stream-cipher" "byteorder" ];
          "simd" = [ "ppv-lite86/simd" ];
          "std" = [ "ppv-lite86/std" ];
        };
        resolvedDefaultFeatures = [ "simd" "std" ];
      };
      "cast 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "cast";
        version = "0.2.3";
        edition = "2015";
        sha256 = "1c5z7zryj0zwnhdgs6rw5dfvnlwc1vm19jzrlgx5055alnwk952b";
        authors = [
          "Jorge Aparicio <jorge@japaric.io>"
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "cc 1.0.50 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "cc";
        version = "1.0.50";
        edition = "2018";
        # Hack to suppress building binaries
        crateBin = [ { name = ","; path = ","; } ];
        sha256 = "1kdqm8ka7xg9h56b694pcz29ka33fsz27mzrphqc78gx96h8zqlm";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "parallel" = [ "jobserver" ];
        };
      };
      "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "cfg-if";
        version = "0.1.10";
        edition = "2018";
        sha256 = "08h80ihs74jcyp24cd75wwabygbbdgl05k6p5dmq8akbr78vv1a7";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "clap";
        version = "2.33.0";
        edition = "2015";
        sha256 = "1nf6ld3bims1n5vfzhkvcb55pdzh04bbhzf8nil5vvw05nxzarsh";
        authors = [
          "Kevin K. <kbknapp@gmail.com>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = { target, features }: (!target."windows");
          }
          {
            name = "atty";
            packageId = "atty 0.2.14 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "bitflags";
            packageId = "bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "strsim";
            packageId = "strsim 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "textwrap";
            packageId = "textwrap 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "vec_map";
            packageId = "vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        features = {
          "color" = [ "ansi_term" "atty" ];
          "default" = [ "suggestions" "color" "vec_map" ];
          "doc" = [ "yaml" ];
          "lints" = [ "clippy" ];
          "suggestions" = [ "strsim" ];
          "wrap_help" = [ "term_size" "textwrap/term_size" ];
          "yaml" = [ "yaml-rust" ];
        };
        resolvedDefaultFeatures = [ "ansi_term" "atty" "color" "default" "strsim" "suggestions" "vec_map" ];
      };
      "clicolors-control 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "clicolors-control";
        version = "1.0.1";
        edition = "2015";
        sha256 = "07klix8nbpwk0cg1k4h0kkiijm1jxvrzndqdkr7dqr6xvkjjw24h";
        authors = [
          "Armin Ronacher <armin.ronacher@active-4.com>"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty 0.2.14 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."windows";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."windows";
            features = [ "winbase" "handleapi" "consoleapi" "processenv" ];
          }
        ];
        features = {
          "default" = [ "terminal_autoconfig" ];
        };
        resolvedDefaultFeatures = [ "default" "terminal_autoconfig" ];
      };
      "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "cloudabi";
        version = "0.0.3";
        edition = "2015";
        sha256 = "0kxcg83jlihy0phnd2g8c2c303px3l2p3pkjz357ll6llnd5pz6x";
        libPath = "cloudabi.rs";
        authors = [
          "Nuxi (https://nuxi.nl/) and contributors"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        features = {
          "default" = [ "bitflags" ];
        };
        resolvedDefaultFeatures = [ "bitflags" "default" ];
      };
      "cmake 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "cmake";
        version = "0.1.42";
        edition = "2015";
        sha256 = "0qkwibkvx5xjazvv9v8gvdlpky2jhjxvcz014nrixgzqfyv2byw1";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cc";
            packageId = "cc 1.0.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "conllx 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "conllx";
        version = "0.12.1";
        edition = "2018";
        sha256 = "152az96alwvqfdimf06w0dawgs8g784q4ywidf319cp15ijcb3n3";
        authors = [
          "Dani√´l de Kok <me@danieldk.eu>"
        ];
        dependencies = [
          {
            name = "failure";
            packageId = "failure 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "itertools";
            packageId = "itertools 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "petgraph";
            packageId = "petgraph 0.4.13 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "console 0.9.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "console";
        version = "0.9.2";
        edition = "2018";
        sha256 = "1h765951c9mywff534f0191slazykmif4290g2yarcwhd2cg7q25";
        authors = [
          "Armin Ronacher <armin.ronacher@active-4.com>"
        ];
        dependencies = [
          {
            name = "clicolors-control";
            packageId = "clicolors-control 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "encode_unicode";
            packageId = "encode_unicode 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."windows";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "regex";
            packageId = "regex 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "termios";
            packageId = "termios 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."unix";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."windows";
            features = [ "winbase" "winuser" "consoleapi" "processenv" "wincon" ];
          }
        ];
        features = {
          "default" = [ "unicode-width" ];
        };
        resolvedDefaultFeatures = [ "default" "unicode-width" ];
      };
      "crc32fast 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "crc32fast";
        version = "1.2.0";
        edition = "2015";
        sha256 = "1c9dhkvf3brrzzplcijaywxi2w8wv5578i0ryhcm7x8dmzi5s4ms";
        authors = [
          "Sam Rijs <srijs@airpost.net>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "criterion 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "criterion";
        version = "0.3.1";
        edition = "2018";
        sha256 = "1lgpr82rlmg6rm4gr3c3pla2xgxnakbf8w9sabjsig8jkikmbiqz";
        authors = [
          "Jorge Aparicio <japaricious@gmail.com>"
          "Brook Heisler <brookheisler@gmail.com>"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty 0.2.14 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "cast";
            packageId = "cast 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "clap";
            packageId = "clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "criterion-plot";
            packageId = "criterion-plot 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "csv";
            packageId = "csv 1.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "itertools";
            packageId = "itertools 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "oorandom";
            packageId = "oorandom 11.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "plotters";
            packageId = "plotters 0.2.12 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "svg" "area_series" "line_series" ];
          }
          {
            name = "rayon";
            packageId = "rayon 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "regex";
            packageId = "regex 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "serde";
            packageId = "serde 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "serde_json";
            packageId = "serde_json 1.0.48 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "tinytemplate";
            packageId = "tinytemplate 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "walkdir";
            packageId = "walkdir 2.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "criterion-plot 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "criterion-plot";
        version = "0.4.1";
        edition = "2018";
        sha256 = "0id5sfww0hjxlzvkzacdlgbls3lxza8iysqljr7j7s2qxbh1a7m0";
        authors = [
          "Jorge Aparicio <japaricious@gmail.com>"
          "Brook Heisler <brookheisler@gmail.com>"
        ];
        dependencies = [
          {
            name = "cast";
            packageId = "cast 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "itertools";
            packageId = "itertools 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "crossbeam-deque 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "crossbeam-deque";
        version = "0.7.2";
        edition = "2015";
        sha256 = "1jm3rqb3qfpfywrakyy81f61xnl4jsim7lam9digw6w6cdfr9an3";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "crossbeam-epoch";
            packageId = "crossbeam-epoch 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "crossbeam-epoch 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "crossbeam-epoch";
        version = "0.8.0";
        edition = "2015";
        sha256 = "1b2mgc2gxxvyzyxgd5wvn9k42gr6f9phi2swwjawpqswy3dynr2h";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "memoffset";
            packageId = "memoffset 0.5.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "scopeguard";
            packageId = "scopeguard 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "alloc" = [ "crossbeam-utils/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "crossbeam-utils/nightly" ];
          "std" = [ "crossbeam-utils/std" "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
      "crossbeam-queue 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "crossbeam-queue";
        version = "0.2.1";
        edition = "2015";
        sha256 = "1nwkjh185bdwjrv1zj2g7an9lglv8sp4459268m4fwvi3v5fx5f6";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "crossbeam-utils/alloc" ];
          "default" = [ "std" ];
          "std" = [ "crossbeam-utils/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "crossbeam-utils 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "crossbeam-utils";
        version = "0.7.0";
        edition = "2015";
        sha256 = "1x1rn35q2v05qif14ijfg7800d3rf3ji2cg79awnacfw5jq6si6f";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
      "csv 1.1.3 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "csv";
        version = "1.1.3";
        edition = "2018";
        sha256 = "0yd2z55m2pg4al4yng4nl2y7c9dw2v7yhg5ynihxyrmmd9zzxbq0";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "bstr";
            packageId = "bstr 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "serde1" ];
          }
          {
            name = "csv-core";
            packageId = "csv-core 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "itoa";
            packageId = "itoa 0.4.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "ryu";
            packageId = "ryu 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "serde";
            packageId = "serde 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        devDependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "derive" ];
          }
        ];
        
      };
      "csv-core 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "csv-core";
        version = "0.1.10";
        edition = "2018";
        sha256 = "145wcc3560v1kmysqqspvddppiysr2rifqzy4nnlh3r6kxanc91b";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr 2.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "libc" = [ "memchr/libc" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "curl 0.4.25 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "curl";
        version = "0.4.25";
        edition = "2015";
        sha256 = "10qjqdvk34sa5ihjx1dr683swsixcsy7gn4j0zrdwm4a43lp3ah6";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "curl-sys";
            packageId = "curl-sys 0.4.26 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "openssl-probe";
            packageId = "openssl-probe 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = { target, features }: (target."unix" && (!(target."os" == "macos")));
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys 0.9.54 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = { target, features }: (target."unix" && (!(target."os" == "macos")));
          }
          {
            name = "schannel";
            packageId = "schannel 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (target."env" == "msvc");
          }
          {
            name = "socket2";
            packageId = "socket2 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (target."env" == "msvc");
            features = [ "libloaderapi" "wincrypt" ];
          }
        ];
        features = {
          "default" = [ "ssl" ];
          "force-system-lib-on-osx" = [ "curl-sys/force-system-lib-on-osx" ];
          "http2" = [ "curl-sys/http2" ];
          "mesalink" = [ "curl-sys/mesalink" ];
          "ssl" = [ "openssl-sys" "openssl-probe" "curl-sys/ssl" ];
          "static-curl" = [ "curl-sys/static-curl" ];
          "static-ssl" = [ "curl-sys/static-ssl" ];
        };
        resolvedDefaultFeatures = [ "default" "openssl-probe" "openssl-sys" "ssl" ];
      };
      "curl-sys 0.4.26 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "curl-sys";
        version = "0.4.26";
        edition = "2015";
        sha256 = "1il8qd2adrlzv4p52mj0pjlrybbjqxr06qbky6qq3csvawmgwlq8";
        libName = "curl_sys";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "libz-sys";
            packageId = "libz-sys 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys 0.9.54 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = { target, features }: (target."unix" && (!(target."os" == "macos")));
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."windows";
            features = [ "winsock2" "ws2def" ];
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc 1.0.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        features = {
          "default" = [ "ssl" ];
          "http2" = [ "libnghttp2-sys" ];
          "ssl" = [ "openssl-sys" ];
          "static-ssl" = [ "openssl-sys/vendored" ];
        };
        resolvedDefaultFeatures = [ "openssl-sys" "ssl" ];
      };
      "dtoa 0.4.5 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "dtoa";
        version = "0.4.5";
        edition = "2015";
        sha256 = "18qycvcp0vaqzw0j784ansbxgs39l54ini9v719cy2cs3ghsjn23";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        
      };
      "edit_tree 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "edit_tree";
        version = "0.1.1";
        edition = "2018";
        sha256 = "07c93c12d7qdv1928mdcm755v69cmcdqynqpsgwhzdah6flckzpq";
        authors = [
          "Tobias P√ºtz <tobias.puetz@uni-tuebingen.de>"
        ];
        dependencies = [
          {
            name = "failure";
            packageId = "failure 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "seqalign";
            packageId = "seqalign 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "serde";
            packageId = "serde 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json 1.0.48 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "either 1.5.3 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "either";
        version = "1.5.3";
        edition = "2015";
        sha256 = "1qyz1b1acad6w0k5928jw5zaq900zhsk7p8dlcp4hh61w4f6n7xv";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
      "encode_unicode 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "encode_unicode";
        version = "0.3.6";
        edition = "2015";
        sha256 = "07w3vzrhxh9lpjgsg2y5bwzfar2aq35mdznvcp3zjl0ssj7d4mx3";
        authors = [
          "Torbj√∏rn Birch Moltu <t.b.moltu@lyse.net>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "error-chain 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "error-chain";
        version = "0.12.1";
        edition = "2015";
        # Hack to suppress building binaries
        crateBin = [ { name = ","; path = ","; } ];
        sha256 = "1ndpw1ny2kxqpw6k1shq8k56z4vfpk4xz9zr8ay988k0rffrxd1s";
        authors = [
          "Brian Anderson <banderson@mozilla.com>"
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
          "Yamakaky <yamakaky@yamaworld.fr>"
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "backtrace" "example_generated" ];
        };
      };
      "failure 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "failure";
        version = "0.1.6";
        edition = "2015";
        sha256 = "1nay5c2cgi40kp84rbiir1dgwlh9aap9jazbnxfmqrkpr49ky9zq";
        authors = [
          "Without Boats <boats@mozilla.com>"
        ];
        dependencies = [
          {
            name = "backtrace";
            packageId = "backtrace 0.3.44 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "failure_derive";
            packageId = "failure_derive 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" "derive" ];
          "derive" = [ "failure_derive" ];
          "std" = [ "backtrace" ];
        };
        resolvedDefaultFeatures = [ "backtrace" "default" "derive" "failure_derive" "std" ];
      };
      "failure_derive 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "failure_derive";
        version = "0.1.6";
        edition = "2015";
        sha256 = "022xfb9wcs1bdssfm2airsrfxpn2ccpbyh1ld2wf9483isvjbhhb";
        procMacro = true;
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.8 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "quote";
            packageId = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "syn";
            packageId = "syn 1.0.14 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "synstructure";
            packageId = "synstructure 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
      };
      "fixedbitset 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "fixedbitset";
        version = "0.1.9";
        edition = "2015";
        sha256 = "0czam11mi80dbyhf4rd4lz0ihcf7vkfchrdcrn45wbs0h40dxm46";
        authors = [
          "bluss"
        ];
        
      };
      "flate2 1.0.13 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "flate2";
        version = "1.0.13";
        edition = "2018";
        sha256 = "03rwyh691j20ih2vcskwp1sinhf9paggrkv32fvzwli9fpsddmkb";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "crc32fast";
            packageId = "crc32fast 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "miniz_oxide";
            packageId = "miniz_oxide 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "miniz_oxide";
            packageId = "miniz_oxide 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: ((target."arch" == "wasm32") && (!(target."os" == "emscripten")));
          }
        ];
        features = {
          "default" = [ "rust_backend" ];
          "rust_backend" = [ "miniz_oxide" ];
          "tokio" = [ "tokio-io" "futures" ];
          "zlib" = [ "libz-sys" ];
        };
        resolvedDefaultFeatures = [ "miniz_oxide" "rust_backend" ];
      };
      "fst 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "fst";
        version = "0.3.5";
        edition = "2015";
        sha256 = "1mpby7wa5mkpgjiilam94a2l9mxx9wpgs3nw2nr1a0czzwsb8zwj";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "memmap";
            packageId = "memmap 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        features = {
          "default" = [ "mmap" ];
          "mmap" = [ "memmap" ];
        };
        resolvedDefaultFeatures = [ "default" "memmap" "mmap" ];
      };
      "fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "fuchsia-cprng";
        version = "0.1.1";
        edition = "2018";
        sha256 = "1fnkqrbz7ixxzsb04bsz9p0zzazanma8znfdqjvh39n14vapfvx0";
        authors = [
          "Erick Tryzelaar <etryzelaar@google.com>"
        ];
        
      };
      "getrandom 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "getrandom";
        version = "0.1.14";
        edition = "2018";
        sha256 = "1sq30li71h19rhnhs1h6576ja68insajx8wvh1nn088r8pc8vg3s";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = { target, features }: target."unix";
          }
          {
            name = "wasi";
            packageId = "wasi 0.9.0+wasi-snapshot-preview1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (target."os" == "wasi");
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "compiler_builtins" "core" ];
          "test-in-browser" = [ "wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "hdf5 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "hdf5";
        version = "0.5.2";
        edition = "2018";
        sha256 = "0a5hwmd0k61x0akz06qck28cjnv2gkki4yrc205hdc2ykyj7y2qw";
        authors = [
          "Ivan Smirnov <i.s.smirnov@gmail.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "hdf5-derive";
            packageId = "hdf5-derive 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "hdf5-sys";
            packageId = "hdf5-sys 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "hdf5-types";
            packageId = "hdf5-types 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "ndarray";
            packageId = "ndarray 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "num-integer";
            packageId = "num-integer 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        buildDependencies = [
          {
            name = "hdf5-sys";
            packageId = "hdf5-sys 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "mpio" = [ "mpi-sys" "hdf5-sys/mpio" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "hdf5-derive 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "hdf5-derive";
        version = "0.5.2";
        edition = "2018";
        sha256 = "0j03i9xa760lsxx71r1ccmp7kz5a6j6iiwqpk1k5s8qzjlhhrcg0";
        procMacro = true;
        authors = [
          "Ivan Smirnov <i.s.smirnov@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "quote";
            packageId = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "syn";
            packageId = "syn 0.15.44 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "derive" "extra-traits" ];
          }
        ];
        
      };
      "hdf5-sys 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "hdf5-sys";
        version = "0.5.2";
        edition = "2018";
        sha256 = "0w4i4lzsryj2h7ls06sbmizdca2s83qz96rqg1hmrx806cbqy600";
        authors = [
          "Ivan Smirnov <i.s.smirnov@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        buildDependencies = [
          {
            name = "libloading";
            packageId = "libloading 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)";
            target = {target, features}: (target."unix" && (!(target."os" == "macos")));
          }
          {
            name = "regex";
            packageId = "regex 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "serde";
            packageId = "serde 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
            target = {target, features}: target."windows";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
            target = {target, features}: target."windows";
          }
          {
            name = "winreg";
            packageId = "winreg 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)";
            target = {target, features}: target."windows";
            features = [ "serialization-serde" ];
          }
        ];
        features = {
          "mpio" = [ "mpi-sys" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "hdf5-types 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "hdf5-types";
        version = "0.5.2";
        edition = "2018";
        sha256 = "1asg1ak9pyziq9hn6dzbv14hssvdlxfdr25cr1s8vl282np0ah6n";
        authors = [
          "Ivan Smirnov <i.s.smirnov@gmail.com>"
        ];
        dependencies = [
          {
            name = "ascii";
            packageId = "ascii 0.9.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "error-chain";
            packageId = "error-chain 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "heck";
        version = "0.3.1";
        edition = "2015";
        sha256 = "01a2v7yvkiqxakdqz4hw3w3g4sm52ivz9cs3qcsv2arxsmw4wmi0";
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = [
          {
            name = "unicode-segmentation";
            packageId = "unicode-segmentation 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "hermit-abi 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "hermit-abi";
        version = "0.1.7";
        edition = "2015";
        sha256 = "0rxvb73c6fny5xpncx8qginph8ygfhnzw9z4fyyc1yqr74a5zig2";
        authors = [
          "Stefan Lankes"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins/rustc-dep-of-std" "libc/rustc-dep-of-std" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "indicatif 0.13.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "indicatif";
        version = "0.13.0";
        edition = "2018";
        sha256 = "11w4yi5kqnkblxidajnda0s85q5q864f4kplzavp0pk6n37vqwl5";
        authors = [
          "Armin Ronacher <armin.ronacher@active-4.com>"
        ];
        dependencies = [
          {
            name = "console";
            packageId = "console 0.9.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "number_prefix";
            packageId = "number_prefix 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "regex";
            packageId = "regex 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
        ];
        features = {
          "with_rayon" = [ "rayon" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "itertools 0.7.11 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "itertools";
        version = "0.7.11";
        edition = "2015";
        sha256 = "03cpsj26xmyamcalclqzr1i700vwx8hnbgxbpjvs354f8mnr8iqd";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either 1.5.3 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
      "itertools 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "itertools";
        version = "0.8.2";
        edition = "2015";
        sha256 = "1154j48aw913v5jnyhpxialxhdn2sfpl4d7bwididyb1r05jsspm";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either 1.5.3 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "itoa 0.4.5 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "itoa";
        version = "0.4.5";
        edition = "2015";
        sha256 = "13nxqrfnh83a7x5rw4wq2ilp8nxvwy74dxzysdg59dbxqk0agdxq";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "js-sys 0.3.35 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "js-sys";
        version = "0.3.35";
        edition = "2018";
        sha256 = "1ybwazllkbif71i195dadgrsw64k6l04ggk5yimiy5c2cb1wg2bq";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "lazy_static";
        version = "1.4.0";
        edition = "2015";
        sha256 = "0in6ikhw8mgl33wjv6q6xfrb5b9jr16q8ygjy803fay4zcisvaz2";
        authors = [
          "Marvin L√∂bel <loebel.marvin@gmail.com>"
        ];
        features = {
          "spin_no_std" = [ "spin" ];
        };
      };
      "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "libc";
        version = "0.2.66";
        edition = "2015";
        sha256 = "0n0mwry21fxfwc063k33mvxk8xj7ia5ar8m42c9ymbam2ksb25fm";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "align" "rustc-std-workspace-core" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "libloading 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "libloading";
        version = "0.5.2";
        edition = "2015";
        sha256 = "0lyply8rcqc8agajzxs7bq6ivba9dnn1i68kgb9z2flnfjh13cgj";
        authors = [
          "Simonas Kazlauskas <libloading@kazlauskas.me>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."windows";
            features = [ "winerror" "errhandlingapi" "libloaderapi" ];
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc 1.0.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "libz-sys 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "libz-sys";
        version = "1.0.25";
        edition = "2015";
        sha256 = "1gjycyl2283525abks98bhxa4r259m617xfm5z52p3p3c8ry9d9f";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc 1.0.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        features = {
        };
      };
      "linked-hash-map 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "linked-hash-map";
        version = "0.5.2";
        edition = "2015";
        sha256 = "10qgbvh00q36ql0jh00rxh2jlq6qvl11n6mig0cvkpf4xf5bd4df";
        authors = [
          "Stepan Koltsov <stepan.koltsov@gmail.com>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
        ];
        features = {
          "heapsize_impl" = [ "heapsize" ];
          "serde_impl" = [ "serde" "serde_test" ];
        };
      };
      "lock_api 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "lock_api";
        version = "0.2.0";
        edition = "2018";
        sha256 = "1zx7pksmgyggpczgw4qrr4vj2nkdk5lipgiysvr20slm552nv57d";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "scopeguard";
            packageId = "scopeguard 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
        };
      };
      "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "log";
        version = "0.4.8";
        edition = "2015";
        sha256 = "1xz18ixccl5c6np4linv3ypc7hpmmgpc5zzd2ymp2ssfx0mhbdhl";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "kv_unstable_sval" = [ "kv_unstable" "sval/fmt" ];
        };
      };
      "maplit 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "maplit";
        version = "1.0.2";
        edition = "2015";
        sha256 = "07b5kjnhrrmfhgqm9wprjw8adx6i225lqp49gasgqg74lahnabiy";
        authors = [
          "bluss"
        ];
        
      };
      "matrixmultiply 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "matrixmultiply";
        version = "0.1.15";
        edition = "2015";
        sha256 = "00p0fpjhm45qdzi37mgv7ggsy8b9gqvq4999yrbgyn1dxkf6gbfw";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "rawpointer";
            packageId = "rawpointer 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "matrixmultiply 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "matrixmultiply";
        version = "0.2.3";
        edition = "2015";
        sha256 = "13s7nfd3dfcsrixld2lk8c563ih5xzczl2w36hprfc016rkfrxyl";
        authors = [
          "bluss"
          "R. Janis Goldschmidt"
        ];
        dependencies = [
          {
            name = "rawpointer";
            packageId = "rawpointer 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "maybe-uninit 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "maybe-uninit";
        version = "2.0.0";
        edition = "2015";
        sha256 = "004y0nzmpfdrhz251278341z6ql34iv1k6dp1h6af7d6nd6jwc30";
        authors = [
          "est31 <MTest31@outlook.com>"
          "The Rust Project Developers"
        ];
        
      };
      "memchr 2.3.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "memchr";
        version = "2.3.2";
        edition = "2015";
        sha256 = "0y1rjc2afcxdf8lg4h31ivlfil242s2ivilpfiwkdx51h7imsi2k";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" "use_std" ];
      };
      "memmap 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "memmap";
        version = "0.6.2";
        edition = "2015";
        sha256 = "1zy6s0ni0lx9rjzq3gq2zz9r8zgjmbp02332g3gsj4fyhv4s5zz2";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."windows";
            features = [ "basetsd" "handleapi" "memoryapi" "minwindef" "std" "sysinfoapi" ];
          }
        ];
        
      };
      "memoffset 0.5.3 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "memoffset";
        version = "0.5.3";
        edition = "2015";
        sha256 = "1fblqzc25hfaym8m0pj112s66pqq87avvaqm5hp5rskib2w9w63m";
        authors = [
          "Gilad Naaman <gilad.naaman@gmail.com>"
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "miniz_oxide 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "miniz_oxide";
        version = "0.3.6";
        edition = "2018";
        sha256 = "198n4hfpq0qcxf275l6fpzh7b9cl7ck2xs6pjgpds74bazv9yrxa";
        authors = [
          "Frommi <daniil.liferenko@gmail.com>"
          "oyvindln <oyvindln@users.noreply.github.com>"
        ];
        dependencies = [
          {
            name = "adler32";
            packageId = "adler32 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "ndarray 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "ndarray";
        version = "0.12.1";
        edition = "2015";
        sha256 = "0a5rfwcbqnvbwi3nw5sfz6kf0flhmjxs64s0b4kxc6lhmyl81wvw";
        authors = [
          "bluss"
          "Jim Turner"
        ];
        dependencies = [
          {
            name = "itertools";
            packageId = "itertools 0.7.11 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "matrixmultiply";
            packageId = "matrixmultiply 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "num-complex";
            packageId = "num-complex 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "blas" = [ "cblas-sys" "blas-src" ];
          "docs" = [ "rustc-serialize" "serde-1" ];
          "serde-1" = [ "serde" ];
          "test" = [ "test-blas-openblas-sys" ];
          "test-blas-openblas-sys" = [ "blas" ];
        };
      };
      "ndarray 0.13.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "ndarray";
        version = "0.13.0";
        edition = "2018";
        sha256 = "0yy5mi5ljmsyqa4g1xs8k0fgdcg6dhwxhyxpbwv6kwjx5zy03c15";
        authors = [
          "bluss"
          "Jim Turner"
        ];
        dependencies = [
          {
            name = "itertools";
            packageId = "itertools 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "matrixmultiply";
            packageId = "matrixmultiply 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "num-complex";
            packageId = "num-complex 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "num-integer";
            packageId = "num-integer 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "rawpointer";
            packageId = "rawpointer 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        devDependencies = [
          {
            name = "itertools";
            packageId = "itertools 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "use_std" ];
          }
        ];
        features = {
          "blas" = [ "cblas-sys" "blas-src" ];
          "docs" = [ "approx" "serde" "rayon" ];
          "serde-1" = [ "serde" ];
          "test" = [ "test-blas-openblas-sys" ];
          "test-blas-openblas-sys" = [ "blas" ];
        };
      };
      "ndarray-rand 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "ndarray-rand";
        version = "0.11.0";
        edition = "2018";
        sha256 = "1rrwdjnwdzlakydvzrdp2c5x68fskcp5vh61kllsf1rkg7n2zwq4";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "ndarray";
            packageId = "ndarray 0.13.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "small_rng" ];
          }
          {
            name = "rand_distr";
            packageId = "rand_distr 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "nom 4.2.3 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "nom";
        version = "4.2.3";
        edition = "2015";
        sha256 = "1mkvby8b4m61p4g1px0pwr58yfkphyp1jcfbp4qfp7l6iqdaklia";
        authors = [
          "contact@geoffroycouprie.com"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr 2.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "std" ];
          "regexp" = [ "regex" ];
          "regexp_macros" = [ "regexp" "lazy_static" ];
          "std" = [ "alloc" "memchr/use_std" ];
          "verbose-errors" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "num-complex 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "num-complex";
        version = "0.2.4";
        edition = "2015";
        sha256 = "15dwaksw729r3v14sgzc9723s3fnfixiir8jzwx7b7kim48r9cdn";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-traits/i128" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "num-derive 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "num-derive";
        version = "0.3.0";
        edition = "2018";
        sha256 = "0imprwv8cs01k46g56ajlvc97dp8kz51y2vn6cp9jkw1c6r1b2qc";
        procMacro = true;
        libName = "num_derive";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.8 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "quote";
            packageId = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "syn";
            packageId = "syn 1.0.14 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "full-syntax" = [ "syn/full" ];
        };
      };
      "num-integer 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "num-integer";
        version = "0.1.42";
        edition = "2015";
        sha256 = "1fpw8yr9xwsf3qrh91rm7mzqaiwlc2dmnalsxv9pr9w1klpacviz";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-traits/i128" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "num-traits";
        version = "0.2.11";
        edition = "2015";
        sha256 = "15khrlm1bra50nd48ijl1vln13m9xg4fxzghf28jp16ic5zf8ay6";
        authors = [
          "The Rust Project Developers"
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "num_cpus 1.12.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "num_cpus";
        version = "1.12.0";
        edition = "2015";
        sha256 = "1riw641hsmp2vwb9wz7d26dsycrjbw3zf4nd6p18kzw5y1a3a826";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "hermit-abi";
            packageId = "hermit-abi 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (((target."arch" == "x86_64") || (target."arch" == "aarch64")) && (target."os" == "hermit"));
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "number_prefix 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "number_prefix";
        version = "0.3.0";
        edition = "2015";
        sha256 = "0slm4mqmpgs6hvz22ycny9lvyvl9ivs80a1lncslp7lszz02zc0p";
        authors = [
          "Benjamin Sago <ogham@bsago.me>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "numberer 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "numberer";
        version = "0.1.1";
        edition = "2018";
        sha256 = "1bzkrd2ni8shpra1v1zhci4whzb035rzai0zxnx52l095ayvid28";
        authors = [
          "Dani√´l de Kok <me@danieldk.eu>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "oorandom 11.1.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "oorandom";
        version = "11.1.0";
        edition = "2018";
        sha256 = "01clxfnz1zwg4maynvbgj09wlkj5m3c8kjqfrp3sqp59qb4wgkpb";
        authors = [
          "Simon Heath <icefox@dreamquest.io>"
        ];
        
      };
      "openssl-probe 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "openssl-probe";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1pijrdifgsdwd45b08c2g0dsmnhz7c3kmagb70839ngrd7d29bvp";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        
      };
      "openssl-sys 0.9.54 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "openssl-sys";
        version = "0.9.54";
        edition = "2015";
        sha256 = "11h98n78nk5c2ar57qs4yfjrb41s4lzxm9l7a1ahl83ljyjw090h";
        build = "build/main.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "cc";
            packageId = "cc 1.0.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        features = {
          "vendored" = [ "openssl-src" ];
        };
      };
      "ordered-float 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "ordered-float";
        version = "1.0.2";
        edition = "2015";
        sha256 = "0625x96987kspdxbikry5mb7hsf5pdc5bbanxd8wjwqlx0ar71hq";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
          "Matt Brubeck <mbrubeck@limpet.net>"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" "std" ];
      };
      "ordermap 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "ordermap";
        version = "0.3.5";
        edition = "2015";
        sha256 = "0qr0a50l0qakbjcck93qdayd0xl8gzpp42x0n7b75cs4ybsx6vm8";
        authors = [
          "bluss"
        ];
        features = {
          "serde-1" = [ "serde" ];
        };
      };
      "parking_lot 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "parking_lot";
        version = "0.8.0";
        edition = "2018";
        sha256 = "1rrcdalr8l5zx3bw28l376321l6dnd6rqnsqsl0ygk01fy0nfxzs";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "lock_api";
            packageId = "lock_api 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "parking_lot_core";
            packageId = "parking_lot_core 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "deadlock_detection" = [ "parking_lot_core/deadlock_detection" ];
          "nightly" = [ "parking_lot_core/nightly" "lock_api/nightly" ];
          "owning_ref" = [ "lock_api/owning_ref" ];
          "serde" = [ "lock_api/serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "parking_lot_core 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "parking_lot_core";
        version = "0.5.0";
        edition = "2018";
        sha256 = "1317j5a1yd03baza2kqqrxb4kr1vxa7rckw4frksl2vrncfcp26b";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "cloudabi";
            packageId = "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (target."os" == "cloudabi");
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."unix";
          }
          {
            name = "rand";
            packageId = "rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "smallvec";
            packageId = "smallvec 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."windows";
            features = [ "winnt" "ntstatus" "minwindef" "winerror" "winbase" "errhandlingapi" "handleapi" ];
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "deadlock_detection" = [ "petgraph" "thread-id" "backtrace" ];
        };
      };
      "petgraph 0.4.13 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "petgraph";
        version = "0.4.13";
        edition = "2015";
        sha256 = "0kyfmca854s54jk26g2x1kjb04c3k7cjilaxyr0if8lhxv8mjdlw";
        authors = [
          "bluss"
          "mitchmindtree"
        ];
        dependencies = [
          {
            name = "fixedbitset";
            packageId = "fixedbitset 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "ordermap";
            packageId = "ordermap 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        features = {
          "all" = [ "unstable" "quickcheck" "stable_graph" "graphmap" ];
          "default" = [ "graphmap" "stable_graph" ];
          "graphmap" = [ "ordermap" ];
          "serde-1" = [ "serde" "serde_derive" ];
          "unstable" = [ "generate" ];
        };
        resolvedDefaultFeatures = [ "default" "graphmap" "ordermap" "stable_graph" ];
      };
      "pkg-config 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "pkg-config";
        version = "0.3.17";
        edition = "2015";
        sha256 = "0xynnaxdv0gzadlw4h79j855k0q7rj4zb9xb1vk00nc6ss559nh5";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        
      };
      "plotters 0.2.12 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "plotters";
        version = "0.2.12";
        edition = "2018";
        sha256 = "1ssycy9an23vs9hq098c7kl1dvp5ych20d994lhsw9vx4kdbhfsf";
        authors = [
          "Hao Hou <haohou302@gmail.com>"
        ];
        dependencies = [
          {
            name = "js-sys";
            packageId = "js-sys 0.3.35 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "web-sys";
            packageId = "web-sys 0.3.35 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (target."arch" == "wasm32");
            features = [ "Document" "DomRect" "Element" "HtmlElement" "Node" "Window" "HtmlCanvasElement" "CanvasRenderingContext2d" ];
          }
        ];
        features = {
          "bitmap" = [ "ttf" ];
          "cairo" = [ "cairo-rs" "ttf" ];
          "datetime" = [ "chrono" ];
          "default" = [ "image_encoder" "svg" "chrono" "palette_ext" "gif_backend" "deprecated_items" "bitmap" "ttf" "errorbar" "candlestick" "boxplot" "histogram" "area_series" "line_series" "point_series" ];
          "evcxr" = [ "svg" ];
          "gif_backend" = [ "gif" "bitmap" ];
          "image_encoder" = [ "image" "bitmap" ];
          "palette_ext" = [ "palette" ];
          "piston" = [ "piston_window" "ttf" ];
          "ttf" = [ "font-kit" "rusttype" "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "area_series" "line_series" "svg" ];
      };
      "podio 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "podio";
        version = "0.1.6";
        edition = "2015";
        sha256 = "1ga5arhwakj5rwrqzf9410zrbwnf24jd59af8kr9rgwbd6vb83vq";
        authors = [
          "Mathijs van de Nes <git@mathijs.vd-nes.nl>"
        ];
        
      };
      "ppv-lite86 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "ppv-lite86";
        version = "0.2.6";
        edition = "2018";
        sha256 = "06zs492wbms7j5qhy58cs3976c7kyc47rx0d6fn63rgvp580njbl";
        authors = [
          "The CryptoCorrosion Contributors"
        ];
        features = {
          "default" = [ "std" "simd" ];
        };
        resolvedDefaultFeatures = [ "simd" "std" ];
      };
      "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "proc-macro2";
        version = "0.4.30";
        edition = "2015";
        sha256 = "0nd71fl24sys066jrha6j7i34nfkjv44yzw8yww9742wmc8j0gfg";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "proc-macro2 1.0.8 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "proc-macro2";
        version = "1.0.8";
        edition = "2018";
        sha256 = "0j45p176fnw0d02dzcky9sxyr4fadiggq07skmblwspqdxy33jrs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "protobuf 2.10.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "protobuf";
        version = "2.10.1";
        edition = "2015";
        sha256 = "1ifkffc7qbn3fhnhyj7c2108a85mryr8g9pjnn3jdglddbcxv1k6";
        authors = [
          "Stepan Koltsov <stepan.koltsov@gmail.com>"
        ];
        features = {
          "with-bytes" = [ "bytes" ];
          "with-serde" = [ "serde" "serde_derive" ];
        };
      };
      "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "quote";
        version = "0.6.13";
        edition = "2015";
        sha256 = "1qgqq48jymp5h4y082aanf25hrw6bpb678xh3zw993qfhxmkpqkc";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "quote";
        version = "1.0.2";
        edition = "2018";
        sha256 = "1zkc46ryacf2jdkc6krsy2z615xbk1x8kp1830rcxz3irj5qqfh5";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.8 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rand";
        version = "0.6.5";
        edition = "2015";
        sha256 = "1jl4449jcl4wgmzld6ffwqj5gwxrp8zvx8w573g1z368qg6xlwbd";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = { target, features }: target."unix";
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "rand_hc";
            packageId = "rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "rand_isaac";
            packageId = "rand_isaac 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "rand_jitter";
            packageId = "rand_jitter 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "rand_os";
            packageId = "rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "rand_pcg";
            packageId = "rand_pcg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "rand_xorshift";
            packageId = "rand_xorshift 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."windows";
            features = [ "minwindef" "ntsecapi" "profileapi" "winnt" ];
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "simd_support" ];
          "serde1" = [ "rand_core/serde1" "rand_isaac/serde1" "rand_xorshift/serde1" ];
          "simd_support" = [ "packed_simd" ];
          "std" = [ "rand_core/std" "alloc" "rand_os" "rand_jitter/std" ];
          "stdweb" = [ "rand_os/stdweb" ];
          "wasm-bindgen" = [ "rand_os/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "rand_os" "std" ];
      };
      "rand 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rand";
        version = "0.7.3";
        edition = "2018";
        sha256 = "00sdaimkbz491qgi6qxkv582yivl32m2jd401kzbn94vsiwicsva";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)";
            rename = "getrandom_package";
            optional = true;
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: target."unix";
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."os" == "emscripten"));
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "rand_hc";
            packageId = "rand_hc 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (target."os" == "emscripten");
          }
          {
            name = "rand_pcg";
            packageId = "rand_pcg 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "rand_hc";
            packageId = "rand_hc 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "rand_pcg";
            packageId = "rand_pcg 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "getrandom" = [ "getrandom_package" "rand_core/getrandom" ];
          "nightly" = [ "simd_support" ];
          "simd_support" = [ "packed_simd" ];
          "small_rng" = [ "rand_pcg" ];
          "std" = [ "rand_core/std" "rand_chacha/std" "alloc" "getrandom" "libc" ];
          "stdweb" = [ "getrandom_package/stdweb" ];
          "wasm-bindgen" = [ "getrandom_package/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "getrandom" "getrandom_package" "libc" "rand_pcg" "small_rng" "std" ];
      };
      "rand_chacha 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rand_chacha";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1vxwyzs4fy1ffjc8l00fsyygpiss135irjf7nyxgq2v0lqf3lvam";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "rand_chacha 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rand_chacha";
        version = "0.2.1";
        edition = "2018";
        sha256 = "0lv8imzzl4h2glm6sjj8mkvasgi8jym23ya48dakyln7m06sk8h3";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
          "The CryptoCorrosion Contributors"
        ];
        dependencies = [
          {
            name = "c2-chacha";
            packageId = "c2-chacha 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "simd" ];
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "std" "simd" ];
          "std" = [ "c2-chacha/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rand_core";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0jzdgszfa4bliigiy4hi66k7fs3gfwi2qxn8vik84ph77fwdwvvs";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "serde1" = [ "rand_core/serde1" ];
          "std" = [ "rand_core/std" ];
        };
      };
      "rand_core 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rand_core";
        version = "0.4.2";
        edition = "2015";
        sha256 = "1p09ynysrq1vcdlmcqnapq4qakl2yd1ng3kxh3qscpx09k2a6cww";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "rand_core 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rand_core";
        version = "0.5.1";
        edition = "2018";
        sha256 = "06bdvx08v3rkz451cm7z59xwwqn1rkfh6v9ay77b14f8dwlybgch";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        features = {
          "serde1" = [ "serde" ];
          "std" = [ "alloc" "getrandom" "getrandom/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "getrandom" "std" ];
      };
      "rand_distr 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rand_distr";
        version = "0.2.2";
        edition = "2018";
        sha256 = "1cpz577qid09lirjjhhn98yqdwsv0c01jf973pxpcr9svp5pm5wn";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand";
            packageId = "rand 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rand_hc";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1i0vl8q5ddvvy0x8hf1zxny393miyzxkwqnw31ifg6p0gdy6fh3v";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        
      };
      "rand_hc 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rand_hc";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0g31sqwpmsirdlwr0svnacr4dbqyz339im4ssl9738cjgfpjjcfa";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "rand_isaac 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rand_isaac";
        version = "0.1.1";
        edition = "2015";
        sha256 = "027flpjr4znx2csxk7gxb7vrf9c7y5mydmvg5az2afgisp4rgnfy";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" "rand_core/serde1" ];
        };
      };
      "rand_jitter 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rand_jitter";
        version = "0.1.4";
        edition = "2015";
        sha256 = "16z387y46bfz3csc42zxbjq89vcr1axqacncvv8qhyy93p4xarhi";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (target."os" == "windows");
            features = [ "profileapi" ];
          }
        ];
        features = {
          "std" = [ "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rand_os";
        version = "0.1.3";
        edition = "2015";
        sha256 = "0wahppm0s64gkr2vmhcgwc0lij37in1lgfxg5rbgqlz0l5vgcxbv";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "cloudabi";
            packageId = "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (target."os" == "cloudabi");
          }
          {
            name = "fuchsia-cprng";
            packageId = "fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."unix";
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "std" ];
          }
          {
            name = "rdrand";
            packageId = "rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (target."env" == "sgx");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."windows";
            features = [ "minwindef" "ntsecapi" "winnt" ];
          }
        ];
        
      };
      "rand_pcg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rand_pcg";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0i0bdla18a8x4jn1w0fxsbs3jg7ajllz6azmch1zw33r06dv1ydb";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
        };
      };
      "rand_pcg 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rand_pcg";
        version = "0.2.1";
        edition = "2018";
        sha256 = "0ab4h6s6x3py833jk61lwadq83qd1c8bih2hgi6yps9rnv0x1aqn";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "serde1" = [ "serde" ];
        };
      };
      "rand_xorshift 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rand_xorshift";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0p2x8nr00hricpi2m6ca5vysiha7ybnghz79yqhhx6sl4gkfkxyb";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
        };
      };
      "rand_xorshift 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rand_xorshift";
        version = "0.2.0";
        edition = "2018";
        sha256 = "1a6wy76lc5fimm1n9n8fzhp4cfjwfwxh4hx63bg3vlh1d2w1dm3p";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "serde1" = [ "serde" ];
        };
      };
      "rawpointer 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rawpointer";
        version = "0.1.0";
        edition = "2015";
        sha256 = "06ghpm9y7gacks78s3maakha07kbnwrxif5q37r2l7z1sali3b7b";
        authors = [
          "bluss"
        ];
        
      };
      "rawpointer 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rawpointer";
        version = "0.2.1";
        edition = "2015";
        sha256 = "1qy1qvj17yh957vhffnq6agq0brvylw27xgks171qrah75wmg8v0";
        authors = [
          "bluss"
        ];
        
      };
      "rayon 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rayon";
        version = "1.3.0";
        edition = "2018";
        sha256 = "1650g13bxlmywhdlw65q3g1zyyb7l0wcm35v45kf31cwgwly6v6v";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "either";
            packageId = "either 1.5.3 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "rayon-core";
            packageId = "rayon-core 1.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "rayon-core 1.7.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rayon-core";
        version = "1.7.0";
        edition = "2018";
        sha256 = "1ac55kpnh2390ah7r071vnjbiy308qpznql0n597x5dgxx39pa08";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "crossbeam-queue";
            packageId = "crossbeam-queue 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus 1.12.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rdrand";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1cjq0kwx1bk7jx3kzyciiish5gqsj7620dm43dc52sr8fzmm9037";
        authors = [
          "Simonas Kazlauskas <rdrand@kazlauskas.me>"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "redox_syscall";
        version = "0.1.56";
        edition = "2015";
        sha256 = "110y7dyfm2vci4x5vk7gr0q551dvp31npl99fnsx2fb17wzwcf94";
        libName = "syscall";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        
      };
      "regex 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "regex";
        version = "1.3.4";
        edition = "2015";
        sha256 = "1a1mh9mgr8jipnxdaykla6xlw4a6kjn2bzkq3cifx8xy4ivzjb1j";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "aho-corasick";
            packageId = "aho-corasick 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr 2.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax 0.6.14 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "thread_local";
            packageId = "thread_local 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" "perf" "unicode" ];
          "perf" = [ "perf-cache" "perf-dfa" "perf-inline" "perf-literal" ];
          "perf-cache" = [ "thread_local" ];
          "perf-literal" = [ "aho-corasick" "memchr" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
          "unicode-age" = [ "regex-syntax/unicode-age" ];
          "unicode-bool" = [ "regex-syntax/unicode-bool" ];
          "unicode-case" = [ "regex-syntax/unicode-case" ];
          "unicode-gencat" = [ "regex-syntax/unicode-gencat" ];
          "unicode-perl" = [ "regex-syntax/unicode-perl" ];
          "unicode-script" = [ "regex-syntax/unicode-script" ];
          "unicode-segment" = [ "regex-syntax/unicode-segment" ];
          "unstable" = [ "pattern" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "aho-corasick" "default" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "thread_local" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
      "regex-automata 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "regex-automata";
        version = "0.1.8";
        edition = "2015";
        sha256 = "1y89vkwd9z7797lsdsizvhw4lw7i1mhfx97a8315bhkh2wm3rdwj";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "regex-syntax" "utf8-ranges" ];
        };
      };
      "regex-syntax 0.6.14 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "regex-syntax";
        version = "0.6.14";
        edition = "2015";
        sha256 = "01myl8xqpbnird23xnsb92sjmz1cmp69r6m7y3dwbpmsx4zzx3dj";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "unicode" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
        };
        resolvedDefaultFeatures = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
      "rustc-demangle 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rustc-demangle";
        version = "0.1.16";
        edition = "2015";
        sha256 = "10qp42sl1wrdbgbbh8rnay2grm976z7hqgz32c4y09l1c071qsac";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "rustc_version";
        version = "0.2.3";
        edition = "2015";
        sha256 = "02h3x57lcr8l2pm0a645s9whdh33pn5cnrwvn5cb57vcrc53x3hk";
        authors = [
          "Marvin L√∂bel <loebel.marvin@gmail.com>"
        ];
        dependencies = [
          {
            name = "semver";
            packageId = "semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "ryu 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "ryu";
        version = "1.0.2";
        edition = "2015";
        sha256 = "1j0h74f1xqf9hjkhanp8i20mqc1aw35kr1iq9i79q7713mn51a5z";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
        };
      };
      "same-file 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "same-file";
        version = "1.0.6";
        edition = "2018";
        sha256 = "00h5j1w87dmhnvbv9l8bic3y7xxsnjmssvifw2ayvgx9mb1ivz4k";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-util";
            packageId = "winapi-util 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."windows";
          }
        ];
        
      };
      "schannel 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "schannel";
        version = "0.1.17";
        edition = "2015";
        sha256 = "15gjmg99gxpwm03vpf7i0ry6bxzxc8z2j44spc74w2pyixp9wyjh";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Steffen Butzer <steffen.butzer@outlook.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "lmcons" "minschannel" "securitybaseapi" "schannel" "sspi" "sysinfoapi" "timezoneapi" "winbase" "wincrypt" "winerror" ];
          }
        ];
        
      };
      "scopeguard 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "scopeguard";
        version = "1.1.0";
        edition = "2015";
        sha256 = "1kbqm85v43rq92vx7hfiay6pmcga03vrjbbfwqpyj3pwsg3b16nj";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
      "semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "semver";
        version = "0.9.0";
        edition = "2015";
        sha256 = "00q4lkcj0rrgbhviv9sd4p6qmdsipkwkbra7rh11jrhq5kpvjzhx";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "semver-parser";
            packageId = "semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "ci" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "semver-parser";
        version = "0.7.0";
        edition = "2015";
        sha256 = "18vhypw6zgccnrlm5ps1pwa0khz7ry927iznpr88b87cagr1v2iq";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
        ];
        
      };
      "sentencepiece 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "sentencepiece";
        version = "0.1.3";
        edition = "2018";
        sha256 = "0f0d3wlq2pjp1mpj20w47fngzwq5p4v6lmlf9hprla1qc02c1vji";
        authors = [
          "Dani√´l de Kok <me@danieldk.eu>"
        ];
        dependencies = [
          {
            name = "failure";
            packageId = "failure 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "num-derive";
            packageId = "num-derive 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "protobuf";
            packageId = "protobuf 2.10.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "sentencepiece-sys";
            packageId = "sentencepiece-sys 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "proto-compile" = [ "protoc-rust" ];
        };
      };
      "sentencepiece-sys 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "sentencepiece-sys";
        version = "0.1.3";
        edition = "2018";
        sha256 = "190hbwcypa8ji09jkm1wigwwm1z7nsjbqnmyiqm0kcy6zbvzzmmy";
        authors = [
          "Dani√´l de Kok <me@danieldk.eu>"
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc 1.0.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "seqalign 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "seqalign";
        version = "0.2.1";
        edition = "2015";
        sha256 = "0qlswjxvaxkx3058w1061m404q833p752inqgrwkdd2m47jr98xw";
        authors = [
          "DanieÃàl de Kok <me@danieldk.eu>"
        ];
        
      };
      "serde 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "serde";
        version = "1.0.104";
        edition = "2015";
        sha256 = "0ja4mgw4p42syjk7jkzwhj2yg6llfrfm7vn8rvy7v3c1bzr1aha1";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde_derive";
            packageId = "serde_derive 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "serde_derive";
            packageId = "serde_derive 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "std" ];
          "derive" = [ "serde_derive" ];
        };
        resolvedDefaultFeatures = [ "default" "derive" "serde_derive" "std" ];
      };
      "serde_derive 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "serde_derive";
        version = "1.0.104";
        edition = "2015";
        sha256 = "0r7gjlwfry44b4ylz524ynjp9v3qiwdj4c588lh94aas78q9x3qj";
        procMacro = true;
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.8 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "quote";
            packageId = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "syn";
            packageId = "syn 1.0.14 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "visit" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "serde_json 1.0.48 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "serde_json";
        version = "1.0.48";
        edition = "2018";
        sha256 = "09cwggp707hf0qswzrg00nffr09prx99f6qlajqnqbacbpksswck";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "itoa";
            packageId = "itoa 0.4.5 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "ryu";
            packageId = "ryu 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "serde";
            packageId = "serde 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "serde/alloc" ];
          "default" = [ "std" ];
          "preserve_order" = [ "indexmap" ];
          "std" = [ "serde/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "serde_yaml 0.8.11 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "serde_yaml";
        version = "0.8.11";
        edition = "2018";
        sha256 = "0d9wdjrlx9gxg80kzc6pvdwz5pwhja2n8n0bxja9vv61kzqif6v9";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "dtoa";
            packageId = "dtoa 0.4.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "serde";
            packageId = "serde 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "yaml-rust";
            packageId = "yaml-rust 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "smallvec 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "smallvec";
        version = "0.6.13";
        edition = "2015";
        sha256 = "1dl219vnfkmsfx28lm3f83lyw24zap6fdsli6rg8nnp1aa67bc7p";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        dependencies = [
          {
            name = "maybe-uninit";
            packageId = "maybe-uninit 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "socket2 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "socket2";
        version = "0.3.11";
        edition = "2018";
        sha256 = "11bdcz04i106g4q7swkll0qxrb4287srqd2k3aq2q6i22zjlvdz8";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (target."unix" || (target."os" == "redox"));
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (target."unix" || (target."os" == "redox"));
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."windows";
            features = [ "handleapi" "ws2def" "ws2ipdef" "ws2tcpip" "minwindef" ];
          }
        ];
        features = {
        };
      };
      "sourcefile 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "sourcefile";
        version = "0.1.4";
        edition = "2015";
        sha256 = "1lwa6973zs4bgj29my7agfjgk4nw9hp6j7dfnr13nid85fw7rxsb";
        authors = [
          "Richard Dodd <richard.o.dodd@gmail.com>"
        ];
        
      };
      "stdinout 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "stdinout";
        version = "0.4.0";
        edition = "2015";
        sha256 = "102np0d8hr3r4gh1w7m5nvsvfj7i2ng8026padjdbpmjyxp05w99";
        authors = [
          "Dani√´l de Kok <me@danieldk.eu>"
        ];
        
      };
      "sticker-encoders 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "sticker-encoders";
        version = "0.2.0";
        edition = "2018";
        sha256 = "19v1lp9ah7vhxd87bh0ld7iqx1jda1bdjg2cvyvg6ckj64b7ippp";
        authors = [
          "Dani√´l de Kok <me@danieldk.eu>"
        ];
        dependencies = [
          {
            name = "conllx";
            packageId = "conllx 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "edit_tree";
            packageId = "edit_tree 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "failure";
            packageId = "failure 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "numberer";
            packageId = "numberer 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "ordered-float";
            packageId = "ordered-float 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "petgraph";
            packageId = "petgraph 0.4.13 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "serde";
            packageId = "serde 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "sticker-transformers 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "sticker-transformers";
        version = "0.4.2";
        edition = "2018";
        sha256 = "01j0yhdpxczbzcpg5s8smd7nn4kmqh3j727z75id2q7llrx0lzj5";
        authors = [
          "Dani√´l de Kok <me@danieldk.eu>"
        ];
        dependencies = [
          {
            name = "failure";
            packageId = "failure 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "hdf5";
            packageId = "hdf5 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "derive" ];
          }
          {
            name = "tch";
            packageId = "tch 0.1.6 (git+https://github.com/LaurentMazare/tch-rs.git?rev=39851f24#39851f24af8e12321ec51386fe3be4e05c5ad90e)";
          }
        ];
        features = {
          "default" = [ "load-hdf5" ];
          "load-hdf5" = [ "hdf5" ];
        };
        resolvedDefaultFeatures = [ "hdf5" "load-hdf5" ];
      };
      "sticker2 0.2.0 (path+file:///home/daniel/git/sticker2/sticker2)" = rec {
        crateName = "sticker2";
        version = "0.2.0";
        edition = "2018";
        src = (builtins.filterSource sourceFilter ../sticker2);
        authors = [
          "Dani√´l de Kok <me@danieldk.eu>"
        ];
        dependencies = [
          {
            name = "conllx";
            packageId = "conllx 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "edit_tree";
            packageId = "edit_tree 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "failure";
            packageId = "failure 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "hdf5";
            packageId = "hdf5 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "ndarray";
            packageId = "ndarray 0.13.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "numberer";
            packageId = "numberer 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "ordered-float";
            packageId = "ordered-float 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "rand_xorshift";
            packageId = "rand_xorshift 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "sentencepiece";
            packageId = "sentencepiece 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "serde";
            packageId = "serde 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json 1.0.48 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "sticker-encoders";
            packageId = "sticker-encoders 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "sticker-transformers";
            packageId = "sticker-transformers 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "tch";
            packageId = "tch 0.1.6 (git+https://github.com/LaurentMazare/tch-rs.git?rev=39851f24#39851f24af8e12321ec51386fe3be4e05c5ad90e)";
          }
          {
            name = "toml";
            packageId = "toml 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "wordpieces";
            packageId = "wordpieces 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        devDependencies = [
          {
            name = "approx";
            packageId = "approx 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "criterion";
            packageId = "criterion 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "maplit";
            packageId = "maplit 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "ndarray-rand";
            packageId = "ndarray-rand 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "load-hdf5" ];
          "load-hdf5" = [ "sticker-transformers/load-hdf5" ];
        };
        resolvedDefaultFeatures = [ "default" "load-hdf5" "model-tests" ];
      };
      "sticker2-utils 0.2.0 (path+file:///home/daniel/git/sticker2/sticker2-utils)" = rec {
        crateName = "sticker2-utils";
        version = "0.2.0";
        edition = "2018";
        crateBin = [
          { name = "sticker2"; path = "src/main.rs"; }
        ];
        src = (builtins.filterSource sourceFilter ../sticker2-utils);
        authors = [
          "Dani√´l de Kok <me@danieldk.eu>"
        ];
        dependencies = [
          {
            name = "clap";
            packageId = "clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "conllx";
            packageId = "conllx 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "failure";
            packageId = "failure 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "indicatif";
            packageId = "indicatif 0.13.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "itertools";
            packageId = "itertools 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "ordered-float";
            packageId = "ordered-float 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "serde" ];
          }
          {
            name = "serde_yaml";
            packageId = "serde_yaml 0.8.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "stdinout";
            packageId = "stdinout 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "sticker-encoders";
            packageId = "sticker-encoders 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "sticker-transformers";
            packageId = "sticker-transformers 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "sticker2";
            packageId = "sticker2 0.2.0 (path+file:///home/daniel/git/sticker2/sticker2)";
            usesDefaultFeatures = false;
          }
          {
            name = "tch";
            packageId = "tch 0.1.6 (git+https://github.com/LaurentMazare/tch-rs.git?rev=39851f24#39851f24af8e12321ec51386fe3be4e05c5ad90e)";
          }
          {
            name = "threadpool";
            packageId = "threadpool 1.7.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "load-hdf5" ];
          "load-hdf5" = [ "sticker-transformers/load-hdf5" "sticker2/load-hdf5" ];
        };
        resolvedDefaultFeatures = [ "default" "load-hdf5" ];
      };
      "strsim 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "strsim";
        version = "0.8.0";
        edition = "2015";
        sha256 = "0sjsm7hrvjdifz661pjxq5w4hf190hx53fra8dfvamacvff139cf";
        authors = [
          "Danny Guo <dannyguo91@gmail.com>"
        ];
        
      };
      "syn 0.15.44 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "syn";
        version = "0.15.44";
        edition = "2015";
        sha256 = "1id5g6x6zihv3j7hwrw3m1jp636bg8dpi671r7zy3jvpkavb794w";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "extra-traits" "parsing" "printing" "proc-macro" "quote" ];
      };
      "syn 1.0.14 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "syn";
        version = "1.0.14";
        edition = "2018";
        sha256 = "1xf8g9a3yl41027g5napiwfd7r87y734lf2dqdyyzyfzv183avxg";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.8 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "extra-traits" "full" "parsing" "printing" "proc-macro" "quote" "visit" ];
      };
      "synstructure 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "synstructure";
        version = "0.12.3";
        edition = "2018";
        sha256 = "0igmc5fzpk6fg7kgff914j05lbpc6ai2wmji312v2h8vvjhnwrb7";
        authors = [
          "Nika Layzell <nika@thelayzells.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.8 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "syn";
            packageId = "syn 1.0.14 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "derive" "parsing" "printing" "clone-impls" "visit" "extra-traits" ];
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "syn/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "tch 0.1.6 (git+https://github.com/LaurentMazare/tch-rs.git?rev=39851f24#39851f24af8e12321ec51386fe3be4e05c5ad90e)" = rec {
        crateName = "tch";
        version = "0.1.6";
        edition = "2018";
        src = pkgs.fetchgit {
          url = "https://github.com/LaurentMazare/tch-rs.git";
          rev = "39851f24af8e12321ec51386fe3be4e05c5ad90e";
          sha256 = "1l0r65lh8z8ard25ykrg6lpz3bml210fjijbj2fppknqiwkwngxb";
        };
        authors = [
          "Laurent Mazare <lmazare@gmail.com>"
        ];
        dependencies = [
          {
            name = "failure";
            packageId = "failure 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "ndarray";
            packageId = "ndarray 0.13.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "rand";
            packageId = "rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "torch-sys";
            packageId = "torch-sys 0.1.6 (git+https://github.com/LaurentMazare/tch-rs.git?rev=39851f24#39851f24af8e12321ec51386fe3be4e05c5ad90e)";
          }
          {
            name = "zip";
            packageId = "zip 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "doc-only" = [ "torch-sys/doc-only" ];
          "python" = [ "cpython" ];
        };
      };
      "termios 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "termios";
        version = "0.3.1";
        edition = "2015";
        sha256 = "09any1p4jp4bphvb5ikagnvwjc3xn2djchy96nkpa782xb2j1dkj";
        authors = [
          "David Cuddeback <david.cuddeback@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "textwrap 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "textwrap";
        version = "0.11.0";
        edition = "2015";
        sha256 = "0q5hky03ik3y50s9sz25r438bc4nwhqc6dqwynv4wylc807n29nk";
        authors = [
          "Martin Geisler <martin@geisler.net>"
        ];
        dependencies = [
          {
            name = "unicode-width";
            packageId = "unicode-width 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "thread_local 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "thread_local";
        version = "1.0.1";
        edition = "2015";
        sha256 = "054vlrr1vsdy1h4b7n99mr24pnj8928ig9qwzg36wnkld4dns36l";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "threadpool 1.7.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "threadpool";
        version = "1.7.1";
        edition = "2015";
        sha256 = "0rd89n1q7vy47w4c32cnynibffv9kj3jy3dwr0536n9lbw5ckw72";
        authors = [
          "The Rust Project Developers"
          "Corey Farwell <coreyf@rwell.org>"
          "Stefan Schindler <dns2utf8@estada.ch>"
        ];
        dependencies = [
          {
            name = "num_cpus";
            packageId = "num_cpus 1.12.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "time";
        version = "0.1.42";
        edition = "2015";
        sha256 = "0vsbvsz0ryxb35dy9j4anxvy8zlaplmjmi0a4z4l64bc135cz3fv";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."windows";
            features = [ "std" "minwinbase" "minwindef" "ntdef" "profileapi" "sysinfoapi" "timezoneapi" ];
          }
        ];
        devDependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "std" "processthreadsapi" "winbase" ];
          }
        ];
        
      };
      "tinytemplate 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "tinytemplate";
        version = "1.0.3";
        edition = "2015";
        sha256 = "06ipxjwl1w6synvql8b50qxbqv0w04agvmmfqcdynr9ygmkcd8sp";
        authors = [
          "Brook Heisler <brookheisler@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "serde_json";
            packageId = "serde_json 1.0.48 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "toml 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "toml";
        version = "0.5.6";
        edition = "2018";
        sha256 = "06n7j8z63hj6g0kj2x6sqwxnm4q3s0q5d873bdk41vqy1cb2vjgz";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "preserve_order" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "torch-sys 0.1.6 (git+https://github.com/LaurentMazare/tch-rs.git?rev=39851f24#39851f24af8e12321ec51386fe3be4e05c5ad90e)" = rec {
        crateName = "torch-sys";
        version = "0.1.6";
        edition = "2018";
        src = pkgs.fetchgit {
          url = "https://github.com/LaurentMazare/tch-rs.git";
          rev = "39851f24af8e12321ec51386fe3be4e05c5ad90e";
          sha256 = "1l0r65lh8z8ard25ykrg6lpz3bml210fjijbj2fppknqiwkwngxb";
        };
        authors = [
          "Laurent Mazare <lmazare@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc 1.0.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "cmake";
            packageId = "cmake 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "curl";
            packageId = "curl 0.4.25 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "failure";
            packageId = "failure 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "zip";
            packageId = "zip 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
      };
      "unicode-segmentation 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "unicode-segmentation";
        version = "1.6.0";
        edition = "2015";
        sha256 = "1h7d48mzpi8hwf5cvnq07warkv86pvapzzzf32hvbjsk20yiagp8";
        authors = [
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        features = {
        };
      };
      "unicode-width 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "unicode-width";
        version = "0.1.7";
        edition = "2015";
        sha256 = "0yflmxkxmm89ckrb3sz58whn491aycrj8cxra0hzzlb72x9rvana";
        authors = [
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "std" "core" "compiler_builtins" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "unicode-xid";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1z57lqh4s18rr4x0j4fw4fmp9hf9346h0kmdgqsqx0fhjr3k0wpw";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "unicode-xid";
        version = "0.2.0";
        edition = "2015";
        sha256 = "0z09fn515xm7zyr0mmdyxa9mx2f7azcpv74pqmg611iralwpcvl2";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "vcpkg 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "vcpkg";
        version = "0.2.8";
        edition = "2015";
        sha256 = "0s1ijdrsg6917imja2hb07l0z4vbx7ydm8m2i1n9g62fg7r3ki1z";
        authors = [
          "Jim McGrath <jimmc2@gmail.com>"
        ];
        
      };
      "vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "vec_map";
        version = "0.8.1";
        edition = "2015";
        sha256 = "06n8hw4hlbcz328a3gbpvmy0ma46vg1lc0r5wf55900szf3qdiq5";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Jorge Aparicio <japaricious@gmail.com>"
          "Alexis Beingessner <a.beingessner@gmail.com>"
          "Brian Anderson <>"
          "tbu- <>"
          "Manish Goregaokar <>"
          "Aaron Turon <aturon@mozilla.com>"
          "Adolfo Ochagav√≠a <>"
          "Niko Matsakis <>"
          "Steven Fackler <>"
          "Chase Southwood <csouth3@illinois.edu>"
          "Eduard Burtescu <>"
          "Florian Wilkens <>"
          "F√©lix Raimundo <>"
          "Tibor Benke <>"
          "Markus Siemens <markus@m-siemens.de>"
          "Josh Branchaud <jbranchaud@gmail.com>"
          "Huon Wilson <dbau.pp@gmail.com>"
          "Corey Farwell <coref@rwell.org>"
          "Aaron Liblong <>"
          "Nick Cameron <nrc@ncameron.org>"
          "Patrick Walton <pcwalton@mimiga.net>"
          "Felix S Klock II <>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
          "Sean McArthur <sean.monstar@gmail.com>"
          "Vadim Petrochenkov <>"
        ];
        features = {
          "eders" = [ "serde" ];
        };
      };
      "version_check 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "version_check";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1pf91pvj8n6akh7w6j5ypka6aqz08b3qpzgs0ak2kjf4frkiljwi";
        authors = [
          "Sergio Benitez <sb@sergio.bz>"
        ];
        
      };
      "walkdir 2.3.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "walkdir";
        version = "2.3.1";
        edition = "2018";
        sha256 = "0z9g39f49cycdm9vzjf8hnfh3f1csxgd65kmlphj8r2vffy84wbp";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "same-file";
            packageId = "same-file 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."windows";
            features = [ "std" "winnt" ];
          }
          {
            name = "winapi-util";
            packageId = "winapi-util 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."windows";
          }
        ];
        
      };
      "wasi 0.9.0+wasi-snapshot-preview1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "wasi";
        version = "0.9.0+wasi-snapshot-preview1";
        edition = "2018";
        sha256 = "06g5v3vrdapfzvfq662cij7v8a1flwr2my45nnncdv2galrdzkfc";
        authors = [
          "The Cranelift Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "compiler_builtins" "core" "rustc-std-workspace-alloc" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "wasm-bindgen 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "wasm-bindgen";
        version = "0.2.58";
        edition = "2018";
        sha256 = "0v31s91andxcj73w63g3fkbw3ld6cfsaa4135qcjna22vypyj1aj";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "wasm-bindgen-macro";
            packageId = "wasm-bindgen-macro 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "spans" "std" ];
          "enable-interning" = [ "std" ];
          "serde-serialize" = [ "serde" "serde_json" "std" ];
          "spans" = [ "wasm-bindgen-macro/spans" ];
          "strict-macro" = [ "wasm-bindgen-macro/strict-macro" ];
          "xxx_debug_only_print_generated_code" = [ "wasm-bindgen-macro/xxx_debug_only_print_generated_code" ];
        };
        resolvedDefaultFeatures = [ "default" "spans" "std" ];
      };
      "wasm-bindgen-backend 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "wasm-bindgen-backend";
        version = "0.2.58";
        edition = "2018";
        sha256 = "0icskn0qlj30np6x6nbyl1i9dndckx0pczaq69dm42r92rcbkk8i";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "bumpalo";
            packageId = "bumpalo 3.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "log";
            packageId = "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.8 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "quote";
            packageId = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "syn";
            packageId = "syn 1.0.14 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "full" ];
          }
          {
            name = "wasm-bindgen-shared";
            packageId = "wasm-bindgen-shared 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "extra-traits" = [ "syn/extra-traits" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-macro 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "wasm-bindgen-macro";
        version = "0.2.58";
        edition = "2018";
        sha256 = "1hwxw0nhi2n4izhjn2fvnrrn59xqjxs3ybkgzdv1b4p65ivr8h2p";
        procMacro = true;
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "wasm-bindgen-macro-support";
            packageId = "wasm-bindgen-macro-support 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "spans" = [ "wasm-bindgen-macro-support/spans" ];
          "strict-macro" = [ "wasm-bindgen-macro-support/strict-macro" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-macro-support 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "wasm-bindgen-macro-support";
        version = "0.2.58";
        edition = "2018";
        sha256 = "0s3n7v741i4wkzib41m126li40qlhqyirnxpigkypsi59wsk2l78";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.8 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "quote";
            packageId = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "syn";
            packageId = "syn 1.0.14 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "visit" ];
          }
          {
            name = "wasm-bindgen-backend";
            packageId = "wasm-bindgen-backend 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "wasm-bindgen-shared";
            packageId = "wasm-bindgen-shared 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "extra-traits" = [ "syn/extra-traits" ];
          "spans" = [ "wasm-bindgen-backend/spans" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-shared 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "wasm-bindgen-shared";
        version = "0.2.58";
        edition = "2018";
        sha256 = "00cnbabf4k9bahb217vkilmjwqwzpwp112vlvgfw1x19r4gydrzm";
        authors = [
          "The wasm-bindgen Developers"
        ];
        
      };
      "wasm-bindgen-webidl 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "wasm-bindgen-webidl";
        version = "0.2.58";
        edition = "2018";
        sha256 = "0pcpaw8w3xgfrg9y24ljrsl2bkidgdaaz3ka2bgk417wjc6jl0gg";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow 1.0.26 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "heck";
            packageId = "heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "log";
            packageId = "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.8 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "quote";
            packageId = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "syn";
            packageId = "syn 1.0.14 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "full" ];
          }
          {
            name = "wasm-bindgen-backend";
            packageId = "wasm-bindgen-backend 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "weedle";
            packageId = "weedle 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "web-sys 0.3.35 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "web-sys";
        version = "0.3.35";
        edition = "2018";
        sha256 = "0fzmxcyahy3ghl8lkjkchj9krmnr56shvbqgr7db3hm8dappryda";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "js-sys";
            packageId = "js-sys 0.3.35 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        buildDependencies = [
          {
            name = "anyhow";
            packageId = "anyhow 1.0.26 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "sourcefile";
            packageId = "sourcefile 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "wasm-bindgen-webidl";
            packageId = "wasm-bindgen-webidl 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "CanvasRenderingContext2d" "Document" "DomRect" "Element" "HtmlCanvasElement" "HtmlElement" "Node" "Window" ];
      };
      "weedle 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "weedle";
        version = "0.10.0";
        edition = "2015";
        sha256 = "0r0i2kllvkn9jil6cjzxdi1zsc6p1gjyk751w8lyclaii1q3zd1v";
        authors = [
          "Sharad Chand <sharad.d.chand@gmail.com>"
        ];
        dependencies = [
          {
            name = "nom";
            packageId = "nom 4.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "winapi";
        version = "0.3.8";
        edition = "2015";
        sha256 = "1ii9j9lzrhwri0902652awifzx9fpayimbp6hfhhc296xcg0k4w0";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-i686-pc-windows-gnu";
            packageId = "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (stdenv.hostPlatform.config == "i686-pc-windows-gnu");
          }
          {
            name = "winapi-x86_64-pc-windows-gnu";
            packageId = "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: (stdenv.hostPlatform.config == "x86_64-pc-windows-gnu");
          }
        ];
        features = {
          "debug" = [ "impl-debug" ];
        };
        resolvedDefaultFeatures = [ "basetsd" "consoleapi" "errhandlingapi" "fileapi" "handleapi" "impl-debug" "impl-default" "ktmw32" "libloaderapi" "lmcons" "memoryapi" "minschannel" "minwinbase" "minwindef" "ntdef" "ntsecapi" "ntstatus" "processenv" "profileapi" "schannel" "securitybaseapi" "sspi" "std" "sysinfoapi" "timezoneapi" "winbase" "wincon" "wincrypt" "winerror" "winnt" "winreg" "winsock2" "winuser" "ws2def" "ws2ipdef" "ws2tcpip" ];
      };
      "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "winapi-i686-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1dmpa6mvcvzz16zg6d5vrfy4bxgg541wxrcip7cnshi06v38ffxc";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        
      };
      "winapi-util 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "winapi-util";
        version = "0.1.3";
        edition = "2018";
        sha256 = "105dq898nah3dwrzr96vvb5srp6g2v5dl5vmzf211lba9iavzksc";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = { target, features }: target."windows";
            features = [ "std" "consoleapi" "errhandlingapi" "fileapi" "minwindef" "processenv" "winbase" "wincon" "winerror" "winnt" ];
          }
        ];
        
      };
      "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "winapi-x86_64-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0gqq64czqb64kskjryj8isp62m2sgvx25yyj3kpc2myh85w24bki";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        
      };
      "winreg 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "winreg";
        version = "0.6.2";
        edition = "2015";
        sha256 = "1jdcqr6zmvwyrp87h48miasfdvv16gjsb60rc8dy2kqwb3mnv65j";
        authors = [
          "Igor Shaula <gentoo90@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "impl-default" "impl-debug" "minwindef" "minwinbase" "timezoneapi" "winerror" "winnt" "winreg" "handleapi" ];
          }
        ];
        features = {
          "serialization-serde" = [ "transactions" "serde" ];
          "transactions" = [ "winapi/ktmw32" ];
        };
        resolvedDefaultFeatures = [ "serde" "serialization-serde" "transactions" ];
      };
      "wordpieces 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "wordpieces";
        version = "0.2.0";
        edition = "2018";
        sha256 = "07jf70sawf3baxk5n9ka4ddnzg1k0rfrdk3cayk0588bl18x92km";
        authors = [
          "Dani√´l de Kok <me@danieldk.eu>"
          "Tobias P√ºtz <tobias.puetz@uni-tuebingen.de"
        ];
        dependencies = [
          {
            name = "failure";
            packageId = "failure 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "fst";
            packageId = "fst 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "yaml-rust 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "yaml-rust";
        version = "0.4.3";
        edition = "2015";
        sha256 = "0ka3qhqc5lvk3hz14wmsj32jhmh44blcbfrx5hfxli2gg38kv4k5";
        authors = [
          "Yuheng Chen <yuhengchen@sensetime.com>"
        ];
        dependencies = [
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        
      };
      "zip 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "zip";
        version = "0.5.4";
        edition = "2018";
        sha256 = "1biv5kh4fl7wpjlsxfczvgrdjlybf0xjaw7s36didql8lxxz67z4";
        authors = [
          "Mathijs van de Nes <git@mathijs.vd-nes.nl>"
        ];
        dependencies = [
          {
            name = "bzip2";
            packageId = "bzip2 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "crc32fast";
            packageId = "crc32fast 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "flate2";
            packageId = "flate2 1.0.13 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "podio";
            packageId = "podio 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "time";
            packageId = "time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        features = {
          "default" = [ "bzip2" "deflate" "time" ];
          "deflate" = [ "flate2/rust_backend" ];
          "deflate-miniz" = [ "flate2/default" ];
          "deflate-zlib" = [ "flate2/zlib" ];
        };
        resolvedDefaultFeatures = [ "bzip2" "default" "deflate" "flate2" "time" ];
      };
    };

    #
# crate2nix/default.nix (excerpt start)
#

  /* Target (platform) data for conditional dependencies.
     This corresponds roughly to what buildRustCrate is setting.
  */
  defaultTarget = {
    unix = true;
    windows = false;
    fuchsia = true;
    test = false;

    # This doesn't appear to be officially documented anywhere yet.
    # See https://github.com/rust-lang-nursery/rust-forge/issues/101.
    os = if stdenv.hostPlatform.isDarwin
    then "macos"
    else stdenv.hostPlatform.parsed.kernel.name;
    arch = stdenv.hostPlatform.parsed.cpu.name;
    family = "unix";
    env = "gnu";
    endian =
      if stdenv.hostPlatform.parsed.cpu.significantByte.name == "littleEndian"
      then "little" else "big";
    pointer_width = toString stdenv.hostPlatform.parsed.cpu.bits;
    vendor = stdenv.hostPlatform.parsed.vendor.name;
    debug_assertions = false;
  };

  /* Filters common temp files and build files. */
  # TODO(pkolloch): Substitute with gitignore filter
  sourceFilter = name: type:
    let
      baseName = builtins.baseNameOf (builtins.toString name);
    in
      ! (
        # Filter out git
        baseName == ".gitignore"
        || (type == "directory" && baseName == ".git")

        # Filter out build results
        || (
          type == "directory" && (
            baseName == "target"
            || baseName == "_site"
            || baseName == ".sass-cache"
            || baseName == ".jekyll-metadata"
            || baseName == "build-artifacts"
          )
        )

        # Filter out nix-build result symlinks        
        || (
          type == "symlink" && lib.hasPrefix "result" baseName
        )

        # Filter out IDE config
        || (
          type == "directory" && (
            baseName == ".idea" || baseName == ".vscode"
          )
        ) || lib.hasSuffix ".iml" baseName

        # Filter out nix build files
        || baseName == "Cargo.nix"

        # Filter out editor backup / swap files.
        || lib.hasSuffix "~" baseName
        || builtins.match "^\\.sw[a-z]$$" baseName != null
        || builtins.match "^\\..*\\.sw[a-z]$$" baseName != null
        || lib.hasSuffix ".tmp" baseName
        || lib.hasSuffix ".bak" baseName
        || baseName == "tests.nix"
      );

  /* Returns a crate which depends on successful test execution 
     of crate given as the second argument. 
  */
  crateWithTest = crate: testCrate: testCrateFlags:
    let
      # override the `crate` so that it will build and execute tests instead of
      # building the actual lib and bin targets We just have to pass `--test`
      # to rustc and it will do the right thing.  We execute the tests and copy
      # their log and the test executables to $out for later inspection.
      test = let
        drv = testCrate.override (
          _: {
            buildTests = true;
          }
        );
      in
        pkgs.runCommand "run-tests-${testCrate.name}" {
          inherit testCrateFlags;
        } ''
          set -ex
          cd ${crate.src}
          for file in ${drv}/tests/*; do
            $file $testCrateFlags 2>&1 | tee -a $out
          done
        '';
    in
      crate.overrideAttrs (
        old: {
          checkPhase = ''
            test -e ${test}
          '';
          passthru = (old.passthru or {}) // {
            inherit test;
          };
        }
      );

  /* A restricted overridable version of builtRustCratesWithFeatures. */
  buildRustCrateWithFeatures =
    { packageId
    , features ? rootFeatures
    , crateOverrides ? defaultCrateOverrides
    , buildRustCrateFunc ? (
        if crateOverrides == pkgs.defaultCrateOverrides
        then buildRustCrate
        else buildRustCrate.override {
          defaultCrateOverrides = crateOverrides;
        }
      )
    , runTests ? false
    , testCrateFlags ? []
    }:
      lib.makeOverridable
        (
          { features, crateOverrides, runTests, testCrateFlags }:
            let
              builtRustCrates = builtRustCratesWithFeatures {
                inherit packageId features buildRustCrateFunc;
                runTests = false;
              };
              builtTestRustCrates = builtRustCratesWithFeatures {
                inherit packageId features buildRustCrateFunc;
                runTests = true;
              };
              drv = builtRustCrates.${packageId};
              testDrv = builtTestRustCrates.${packageId};
            in
              if runTests then crateWithTest drv testDrv testCrateFlags else drv
        )
        { inherit features crateOverrides runTests testCrateFlags; };

  /* Returns an attr set with packageId mapped to the result of buildRustCrateFunc 
     for the corresponding crate. 
  */
  builtRustCratesWithFeatures =
    { packageId
    , features
    , crateConfigs ? crates
    , buildRustCrateFunc
    , runTests
    , target ? defaultTarget
    } @ args:
      assert (builtins.isAttrs crateConfigs);
      assert (builtins.isString packageId);
      assert (builtins.isList features);
      assert (builtins.isAttrs target);
      assert (builtins.isBool runTests);

      let
        rootPackageId = packageId;
        mergedFeatures = mergePackageFeatures (
          args // {
            inherit rootPackageId;
            target = target // { test = runTests; };
          }
        );

        buildByPackageId = packageId: buildByPackageIdImpl packageId;

        # Memoize built packages so that reappearing packages are only built once.
        builtByPackageId =
          lib.mapAttrs (packageId: value: buildByPackageId packageId) crateConfigs;

        buildByPackageIdImpl = packageId:
          let
            features = mergedFeatures."${packageId}" or [];
            crateConfig' = crateConfigs."${packageId}";
            crateConfig =
              builtins.removeAttrs crateConfig' [ "resolvedDefaultFeatures" "devDependencies" ];
            devDependencies =
              lib.optionals
                (runTests && packageId == rootPackageId)
                (crateConfig'.devDependencies or []);
            dependencies =
              dependencyDerivations {
                inherit builtByPackageId features target;
                dependencies =
                  (crateConfig.dependencies or [])
                  ++ devDependencies;
              };
            buildDependencies =
              dependencyDerivations {
                inherit builtByPackageId features target;
                dependencies = crateConfig.buildDependencies or [];
              };

            dependenciesWithRenames =
              lib.filter (d: d ? "rename") (
                (crateConfig.buildDependencies or [])
                ++ (crateConfig.dependencies or [])
                ++ devDependencies
              );

            crateRenames =
              builtins.listToAttrs
                (map (d: { name = d.name; value = d.rename; }) dependenciesWithRenames);
          in
            buildRustCrateFunc (
              crateConfig // {
                src = crateConfig.src or (
                  pkgs.fetchurl {
                    name = "${crateConfig.crateName}-${crateConfig.version}.tar.gz";
                    url = "https://crates.io/api/v1/crates/${crateConfig.crateName}/${crateConfig.version}/download";
                    sha256 = crateConfig.sha256;
                  }
                );
                inherit features dependencies buildDependencies crateRenames;
              }
            );
      in
        builtByPackageId;

  /* Returns the actual derivations for the given dependencies. */
  dependencyDerivations =
    { builtByPackageId
    , features
    , dependencies
    , target
    }:
      assert (builtins.isAttrs builtByPackageId);
      assert (builtins.isList features);
      assert (builtins.isList dependencies);
      assert (builtins.isAttrs target);

      let
        enabledDependencies = filterEnabledDependencies {
          inherit dependencies features target;
        };
        depDerivation = dependency: builtByPackageId.${dependency.packageId};
      in
        map depDerivation enabledDependencies;

  /* Returns a sanitized version of val with all values substituted that cannot
     be serialized as JSON. 
  */
  sanitizeForJson = val:
    if builtins.isAttrs val
    then lib.mapAttrs (n: v: sanitizeForJson v) val
    else if builtins.isList val
    then builtins.map sanitizeForJson val
    else if builtins.isFunction val
    then "function"
    else val;

  /* Returns various tools to debug a crate. */
  debugCrate = { packageId, target }:
    assert (builtins.isString packageId);

    let
      debug = rec {
        # The built tree as passed to buildRustCrate.
        buildTree = buildRustCrateWithFeatures {
          buildRustCrateFunc = lib.id;
          inherit packageId;
        };
        sanitizedBuildTree = sanitizeForJson buildTree;
        dependencyTree = sanitizeForJson (
          buildRustCrateWithFeatures {
            buildRustCrateFunc = crate: {
              "01_crateName" = crate.crateName or false;
              "02_features" = crate.features or [];
              "03_dependencies" = crate.dependencies or [];
            };
            inherit packageId;
          }
        );
        mergedPackageFeatures = mergePackageFeatures {
          features = rootFeatures;
          inherit packageId target;
        };
        diffedDefaultPackageFeatures = diffDefaultPackageFeatures {
          features = rootFeatures;
          inherit packageId;
        };
      };
    in
      { internal = debug; };

  /* Returns differences between cargo default features and crate2nix default
     features.
   
     This is useful for verifying the feature resolution in crate2nix.
  */
  diffDefaultPackageFeatures =
    { crateConfigs ? crates
    , packageId
    , target
    }:
      assert (builtins.isAttrs crateConfigs);

      let
        prefixValues = prefix: lib.mapAttrs (n: v: { "${prefix}" = v; });
        mergedFeatures =
          prefixValues
            "crate2nix"
            (mergePackageFeatures { inherit crateConfigs packageId target; features = [ "default" ]; });
        configs = prefixValues "cargo" crateConfigs;
        combined = lib.foldAttrs (a: b: a // b) {} [ mergedFeatures configs ];
        onlyInCargo =
          builtins.attrNames
            (lib.filterAttrs (n: v: !(v ? "crate2nix") && (v ? "cargo")) combined);
        onlyInCrate2Nix =
          builtins.attrNames
            (lib.filterAttrs (n: v: (v ? "crate2nix") && !(v ? "cargo")) combined);
        differentFeatures = lib.filterAttrs
          (
            n: v:
              (v ? "crate2nix")
              && (v ? "cargo")
              && (v.crate2nix.features or []) != (v."cargo".resolved_default_features or [])
          )
          combined;
      in
        builtins.toJSON {
          inherit onlyInCargo onlyInCrate2Nix differentFeatures;
        };

  /* Returns an attrset mapping packageId to the list of enabled features.

     If multiple paths to a dependency enable different features, the
     corresponding feature sets are merged. Features in rust are additive.
  */
  mergePackageFeatures =
    { crateConfigs ? crates
    , packageId
    , rootPackageId ? packageId
    , features ? rootFeatures
    , dependencyPath ? [ crates.${packageId}.crateName ]
    , featuresByPackageId ? {}
    , target
      # Adds devDependencies to the crate with rootPackageId.
    , runTests ? false
    , ...
    } @ args:
      assert (builtins.isAttrs crateConfigs);
      assert (builtins.isString packageId);
      assert (builtins.isString rootPackageId);
      assert (builtins.isList features);
      assert (builtins.isList dependencyPath);
      assert (builtins.isAttrs featuresByPackageId);
      assert (builtins.isAttrs target);
      assert (builtins.isBool runTests);

      let
        crateConfig = crateConfigs."${packageId}" or (builtins.throw "Package not found: ${packageId}");
        expandedFeatures = expandFeatures (crateConfig.features or {}) features;

        depWithResolvedFeatures = dependency:
          let
            packageId = dependency.packageId;
            features = dependencyFeatures expandedFeatures dependency;
          in
            { inherit packageId features; };

        resolveDependencies = cache: path: dependencies:
          assert (builtins.isAttrs cache);
          assert (builtins.isList dependencies);

          let
            enabledDependencies = filterEnabledDependencies {
              inherit dependencies target;
              features = expandedFeatures;
            };
            directDependencies = map depWithResolvedFeatures enabledDependencies;
            foldOverCache = op: lib.foldl op cache directDependencies;
          in
            foldOverCache
              (
                cache: { packageId, features }:
                  let
                    cacheFeatures = cache.${packageId} or [];
                    combinedFeatures = sortedUnique (cacheFeatures ++ features);
                  in
                    if cache ? ${packageId} && cache.${packageId} == combinedFeatures
                    then cache
                    else mergePackageFeatures {
                      features = combinedFeatures;
                      featuresByPackageId = cache;
                      inherit crateConfigs packageId target runTests rootPackageId;
                    }
              );

        cacheWithSelf =
          let
            cacheFeatures = featuresByPackageId.${packageId} or [];
            combinedFeatures = sortedUnique (cacheFeatures ++ expandedFeatures);
          in
            featuresByPackageId // {
              "${packageId}" = combinedFeatures;
            };

        cacheWithDependencies =
          resolveDependencies cacheWithSelf "dep" (
            crateConfig.dependencies or []
            ++ lib.optionals
              (runTests && packageId == rootPackageId)
              (crateConfig.devDependencies or [])
          );

        cacheWithAll =
          resolveDependencies
            cacheWithDependencies "build"
            (crateConfig.buildDependencies or []);

      in
        cacheWithAll;

  /* Returns the enabled dependencies given the enabled features. */
  filterEnabledDependencies = { dependencies, features, target }:
    assert (builtins.isList dependencies);
    assert (builtins.isList features);
    assert (builtins.isAttrs target);

    lib.filter
      (
        dep:
          let
            targetFunc = dep.target or (features: true);
          in
            targetFunc { inherit features target; }
            && (
              !(dep.optional or false)
              || builtins.any (doesFeatureEnableDependency dep) features
            )
      )
      dependencies;

  /* Returns whether the given feature should enable the given dependency. */
  doesFeatureEnableDependency = { name, rename ? null, ... }: feature:
    let
      prefix = "${name}/";
      len = builtins.stringLength prefix;
      startsWithPrefix = builtins.substring 0 len feature == prefix;
    in
      feature == name
      || (rename != null && rename == feature)
      || startsWithPrefix;

  /* Returns the expanded features for the given inputFeatures by applying the
     rules in featureMap.

     featureMap is an attribute set which maps feature names to lists of further
     feature names to enable in case this feature is selected.
  */
  expandFeatures = featureMap: inputFeatures:
    assert (builtins.isAttrs featureMap);
    assert (builtins.isList inputFeatures);

    let
      expandFeature = feature:
        assert (builtins.isString feature);
        [ feature ] ++ (expandFeatures featureMap (featureMap."${feature}" or []));
      outFeatures = builtins.concatMap expandFeature inputFeatures;
    in
      sortedUnique outFeatures;

  /*
     Returns the actual dependencies for the given dependency.
    
     features: The features of the crate that refers this dependency.
  */
  dependencyFeatures = features: dependency:
    assert (builtins.isList features);
    assert (builtins.isAttrs dependency);

    let
      defaultOrNil = if dependency.usesDefaultFeatures or true
      then [ "default" ]
      else [];
      explicitFeatures = dependency.features or [];
      additionalDependencyFeatures =
        let
          dependencyPrefix = dependency.name + "/";
          dependencyFeatures =
            builtins.filter (f: lib.hasPrefix dependencyPrefix f) features;
        in
          builtins.map (lib.removePrefix dependencyPrefix) dependencyFeatures;
    in
      defaultOrNil ++ explicitFeatures ++ additionalDependencyFeatures;

  /* Sorts and removes duplicates from a list of strings. */
  sortedUnique = features:
    assert (builtins.isList features);
    assert (builtins.all builtins.isString features);

    let
      outFeaturesSet = lib.foldl (set: feature: set // { "${feature}" = 1; }) {} features;
      outFeaturesUnique = builtins.attrNames outFeaturesSet;
    in
      builtins.sort (a: b: a < b) outFeaturesUnique;

  deprecationWarning = message: value:
    if strictDeprecation
    then builtins.throw "strictDeprecation enabled, aborting: ${message}"
    else builtins.trace message value;

  #
  # crate2nix/default.nix (excerpt end)
  #

  };
}
